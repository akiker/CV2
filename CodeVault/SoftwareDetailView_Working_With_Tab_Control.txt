@model CodeVault.Models.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Software Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h4>@ViewBag.DetailTitle</h4>
    
    <div id="forecast">
        @(Html.Kendo().TabStrip()
          .Name("tabstrip")
          .Items(tabstrip =>
          {
              tabstrip.Add().Text("Overview")
                  .Selected(true)
                  .Content(@<text>
                    <div class="col-sm-6 form-group">
                        <dl class="dl-horizontal">
                            <dt>@Html.LabelFor(model => model.Name):</dt>
                            <dd>@Html.DisplayFor(model => model.Name)</dd>
                            <dt>@Html.LabelFor(model => model.Manufacturer):</dt>
                            <dd>@Html.DisplayFor(model => model.Manufacturer)</dd>
                            <dt>@Html.LabelFor(model => model.Version):</dt>
                            <dd>@Html.DisplayFor(model => model.Version)</dd>
                            <dt>@Html.LabelFor(model => model.CreatedOnDate,"Created on Date"):</dt>
                            <dd> @Html.DisplayFor(model => model.Version) </dd>
                            <dt>@Html.LabelFor(model => model.Description):</dt>
                            <dd>@Html.DisplayFor(model => model.Description)</dd>
                            @*@Html.LabelFor(model => model.Version): &nbsp;@Html.DisplayFor(model => model.Version)
                            
                            @Html.LabelFor(model => model.CreatedOnDate, "Created on Date"): &nbsp;@Html.DisplayFor(model => model.CreatedOnDate)
                            
                            @Html.LabelFor(model => model.Description): &nbsp;@Html.DisplayFor(model => model.Description)*@
                            
                        </dl>
                        <p>Tincidunt integer eu augue augue nunc elit dolor, luctus placerat scelerisque euismod, iaculis eu lacus nunc mi elit, vehicula ut laoreet ac, aliquam sit amet justo nunc tempor, metus vel.</p>
                    </div>
                <span class="rainy">&nbsp;</span>
                    
                </text>);

              tabstrip.Add().Text("Permissions")
                  .Content(@<text>
                <div>
                    @Html.LabelFor(model => model.Permissions.ElevatedRightsRequired, "Elevated Rights Required"): &nbsp;@Html.DisplayFor(model => model.Permissions.ElevatedRightsRequired)
                    <br />
                    @Html.LabelFor(model => model.Permissions.RequiresAdminRightsBasic, "Requires Admin Rights for Basic Functionality"): &nbsp;@Html.DisplayFor(model => model.Permissions.RequiresAdminRightsBasic)
                    <br />
                    @Html.LabelFor(model => model.Permissions.RequiresAdminRightsAdvanced, "Requires Admin Rights for Advanced Functionality"): &nbsp;@Html.DisplayFor(model => model.Permissions.RequiresAdminRightsAdvanced)
                    <br />
                    @Html.LabelFor(model => model.Permissions.RequiresAdminRightsUpdate, "Requires Admin Rights for Updates"): &nbsp;@Html.DisplayFor(model => model.Permissions.RequiresAdminRightsUpdate)
                    <hr />
                    @Html.LabelFor(model => model.Permissions.LaVerified, "Local Admin (LA) Verified"): &nbsp;@Html.DisplayFor(model => model.Permissions.LaVerified)
                    <br />
                    @Html.LabelFor(model => model.Permissions.WorksWithLa, "Works with LA Account"): &nbsp;@Html.DisplayFor(model => model.Permissions.WorksWithLa)
                </div>
        <br />
                <table class="table table-bordered table-striped">
                    <tr>
                        <th>Permission</th>
                        <th>Type</th>
                        <th>Group or User</th>
                        <th>Location</th>
                    </tr>
                    <tr>
                        @foreach (var p in Model.Permissions.Permissions)
                        {
                            <td>@p.Permission</td>
                            <td>@p.Type</td>
                            <td>@p.GroupUser</td>
                            <td>@p.Location</td>
                        }
                    </tr>
                </table>
        
                
                </text>);

              @*tabstrip.Add().Text("Moscow")
                  .Content(@<text>
                <span class="cloudy">&nbsp;</span>
                <div class="weather">
                    <h2>16<span>&ordm;C</span></h2>
                    <p>Cloudy weather in Moscow.</p>
                    @Html.LabelFor(model => model.Permissions.ElevatedRightsRequired, "Elevated Rights Required"): &nbsp;@Html.DisplayFor(model => model.Permissions.ElevatedRightsRequired)
                    <br />
                </div>
                </text>);

              tabstrip.Add().Text("Sydney")
                  .Content(@<text>
                <span class="rainy">&nbsp;</span>
                <div class="weather">
                    <h2>17<span>&ordm;C</span></h2>
                    <p>Rainy weather in Sidney.</p>
                </div>
                
                </text>);*@
          })
        )
    </div>
</div>
<style>
    .sunny, .cloudy, .rainy {
        display: block;
        margin: 30px auto 10px;
        width: 128px;
        height: 300px;
        /*background: url(../../Images/weather.png) transparent no-repeat 0 0;*/
    }

    .cloudy {
        background-position: -128px 0;
    }

    .rainy {
        background-position: -256px 0;
    }

    .weather {
        margin: 0 auto 30px;
        text-align: left;
    }

    #tabstrip h2 {
        font-weight: lighter;
        font-size: 5em;
        line-height: 1;
        padding: 0 0 0 30px;
        margin: 0;
    }

        #tabstrip h2 span {
            background: none;
            padding-left: 5px;
            font-size: .3em;
            vertical-align: top;
        }

    #tabstrip p {
        margin: 0;
        padding: 0;
    }
</style>

<script>
    $(document).ready(function() {
        $("#tabstrip").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            }
        });
    });
</script>

<p>
    @Html.ActionLink("Back to List", "Index")
</p>


@*<script>
    var resizeAll = function () {
        expandContentDivs(tabStripElement.children(".k-content"));
    }

    var tabStripElement = $("#tabStripDetails").kendoTabStrip({
        animation: {
            open: {
                effects: "fade"
            }
        }
    });
    var tabStrip = tabStripElement.data("kendoTabStrip");

    var expandContentDivs = function (divs) {
        divs.height(tabStripElement.innerHeight() - tabStripElement.children(".k-tabstrip-items").outerHeight() - 16);

    }
    // 16px are substracted to compensate for content div vertical paddings and borders

    tabStripElement.parent().attr("id", "tabstrip-parent");

    resizeAll();

    $(window).resize(function () {
        resizeAll();
    });

</script>*@



